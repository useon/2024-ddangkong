name: BE CD for Dev

on:
  workflow_dispatch:

  push:
    branches: [ "develop" ]
    paths:
      - backend/**

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_GMAIL }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        run: |
          docker compose -f deploy/docker-compose-dev.yml build
          docker tag deploy-ddangkong-api-dev:latest ${{ secrets.DOCKER_REPOSITORY_NAME }}/ddangkong-api-dev:latest

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_REPOSITORY_NAME }}/ddangkong-api-dev:latest

  deploy:
    needs: build
    runs-on: [ self-hosted, linux, ARM64 ] # Self hosted runner 사용

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_GMAIL }}
          password: ${{ secrets.DOCKER_TOKEN }}
        env:
          CONTAINER_NAME: ddangkong-api-dev

      - name: Pull docker image
        run: sudo docker pull ${{ secrets.DOCKER_REPOSITORY_NAME }}/ddangkong-api-dev:latest

      - name: Stop and Remove previous Docker container
        run: |
          CONTAINER_ID=$(sudo docker ps -aqf "name=ddangkong-api-dev")
          if [ -n "$CONTAINER_ID" ]; then
          sudo docker rm -f ${CONTAINER_ID}
          else
            echo "No previous container found with name. Skipping removal."
          fi

      - name: Run new Docker container
        run: | 
          sudo docker run -d --name ddangkong-api-dev \
          ddangkong/ddangkong-api-dev:latest
